name: Build and Push Docker Images

on:
  workflow_call:
    inputs:
      image:
        description: 'The name of the Docker image to build and push'
        required: true
        type: string
      DOCKER_HUB_BASE_PATH:
        description: 'Docker Hub base path'
        required: true
        type: string
      DOCKER_HUB_USERNAME:
        description: 'Docker Hub username'
        required: true
        type: string
      ENV_NAME:
        description: 'The environment name (production, dev)'
        type: string
        default: 'dev'
    secrets:
      DOCKER_HUB_PASSWORD:
        description: 'Docker Hub password'
        required: false

jobs:
  build-and-push:
    name: Build and Push
    runs-on: ubuntu-latest
    environment: ${{ inputs.ENV_NAME }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Get Docker Registry Info
        id: get-docker-registry
        run: |
          if [[ "${{ inputs.ENV_NAME }}" == "production" ]]; then
            # Docker Hub
            echo "docker_registry=" >> $GITHUB_OUTPUT
            echo "docker_base_path=${{ inputs.DOCKER_HUB_BASE_PATH }}" >> $GITHUB_OUTPUT
            echo "docker_username=${{ inputs.DOCKER_HUB_USERNAME }}" >> $GITHUB_OUTPUT
            echo "docker_password=${{ secrets.DOCKER_HUB_PASSWORD }}" >> $GITHUB_OUTPUT
          else
            echo "docker_registry=ghcr.io/" >> $GITHUB_OUTPUT
            echo "docker_base_path=${{ github.repository }}/docker" >> $GITHUB_OUTPUT
            echo "docker_username=${{ github.actor }}" >> $GITHUB_OUTPUT
            echo "docker_password=${{ secrets.GITHUB_TOKEN }}" >> $GITHUB_OUTPUT
          fi
    
      - name: Log in to Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ steps.get-docker-registry.outputs.docker_registry }}
          username: ${{ steps.get-docker-registry.outputs.docker_username }}
          password: ${{ steps.get-docker-registry.outputs.docker_password }}

      - name: Image Name and Tags
        id: image-name-and-tags
        run: |
          if ! [[ -f ./docker/${{ inputs.image }}/VERSION.txt ]]; then
            echo "VERSION.txt not found in ./docker/${{ inputs.image }}/"
            exit 1
          fi
          SEMVER=$(cat ./docker/${{ inputs.image }}/VERSION.txt | tr -d '\n')

          SHORT_SHA=$(git rev-parse --short ${{ github.sha }})

          IMAGE_TAGS=""
          if [[ "${{ inputs.ENV_NAME }}" == "production" ]]; then
            IMAGE_TAGS="${IMAGE_TAGS}\ntype=raw,value=${SEMVER}"
            IMAGE_TAGS="${IMAGE_TAGS}\ntype=raw,value=${SEMVER}-${SHORT_SHA}"
            IMAGE_TAGS="${IMAGE_TAGS}\ntype=raw,value=main"
          else
            IMAGE_TAGS="${IMAGE_TAGS}\ntype=raw,value=${{ github.ref_name }}-${SEMVER}"
            IMAGE_TAGS="${IMAGE_TAGS}\ntype=raw,value=${{ github.ref_name }}-${SEMVER}-${SHORT_SHA}"
            IMAGE_TAGS="${IMAGE_TAGS}\ntype=raw,value=${{ github.ref_name }}"
          fi

          if [[ "${{ inputs.ENV_NAME }}" == "production" ]]; then
            IMAGE_TAGS="${IMAGE_TAGS}\ntype=raw,value=latest"
          fi
          echo "image_tags<<EOF" >> $GITHUB_OUTPUT
          echo -e "${IMAGE_TAGS}" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          
          echo "image_name=${{ steps.get-docker-registry.outputs.docker_registry }}${{ steps.get-docker-registry.outputs.docker_base_path }}/${{ inputs.image }}" >> $GITHUB_OUTPUT
          echo "image_semver=${SEMVER}" >> $GITHUB_OUTPUT
        
      - name: Docker Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ steps.image-name-and-tags.outputs.image_name }}
          tags: |
            ${{ steps.image-name-and-tags.outputs.image_tags }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ./docker/${{ inputs.image }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Release Production Tag
        if: ${{ inputs.ENV_NAME == 'production' }}
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "GitHub Action"
          
          tag="docker/${{ inputs.image }}/${{ steps.image-name-and-tags.outputs.image_semver }}"
          git tag -a "${tag}" -m "Release Image '${{ inputs.image }}' - ${{ steps.image-name-and-tags.outputs.image_semver }}"
          git push origin "${tag}"